name: CI Build

on:
  push:
  pull_request:
  workflow_dispatch:
    inputs:
      skipTests:
        description: 'Should tests be skipped (true/false)?'
        required: true
        default: 'false'

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      DOCKER_APISERVER_REPO: vetal2409/dtrack_api
#      DOCKER_APISERVER_REPO: dependencytrack/apiserver
#      DOCKER_BUNDLED_REPO: dependencytrack/bundled
#      DOCKER_TAG: snapshot
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      id: buildx
      with:
        install: true

    - name: Available platforms
      run: echo ${{ steps.buildx.outputs.platforms }}

    - name: Set up JDK
      uses: actions/setup-java@v2
      with:
        distribution: 'temurin'
        java-version: '11'
        cache: 'maven'

    - name: Build with Maven
      run: |-
        mvn clean
        mvn package -Dmaven.test.skip=true -P clean-exclude-wars -P enhance -P embedded-jetty -Dlogback.configuration.file=src/main/docker/logback.xml
        mvn clean -P clean-exclude-wars
        mvn package -Dmaven.test.skip=true -P enhance -P embedded-jetty -P bundle-ui -Dlogback.configuration.file=src/main/docker/logback.xml
        mvn clean -P clean-exclude-wars

    - name: Execute unit tests
      if: github.event.inputs.skipTests != 'true'
      run: mvn test -P enhance

#    - name: Publish test coverage
#      if: github.ref == 'refs/heads/master' && github.event.inputs.skipTests != 'true'
#      uses: codacy/codacy-coverage-reporter-action@v1
#      with:
#        project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
#        language: Java
#        coverage-reports: target/jacoco-ut/jacoco.xml

    - name: Logging into Docker Hub
      if: github.ref == 'refs/heads/master'
      env:
        HUB_USERNAME: ${{ secrets.HUB_USERNAME }}
        HUB_ACCESSS_TOKEN: ${{ secrets.HUB_ACCESSS_TOKEN }}
      run: docker login -u "${HUB_USERNAME}" -p "${HUB_ACCESSS_TOKEN}"

    - name: Building Docker API Server container
      if: github.ref == 'refs/heads/master'
      run: |-
        docker build -f src/main/docker/Dockerfile \
          --build-arg COMMIT_SHA=${GITHUB_SHA} \
          --build-arg APP_VERSION=${DOCKER_TAG} \
          --build-arg WAR_FILENAME=dependency-track-apiserver.jar \
          -t ${DOCKER_APISERVER_REPO}:${DOCKER_TAG} \
          --platform linux/amd64,linux/arm64 \
          --push .

#    - name: Building Docker bundled container
#      if: github.ref == 'refs/heads/master'
#      run: |-
#        docker build -f src/main/docker/Dockerfile \
#          --build-arg COMMIT_SHA=${GITHUB_SHA} \
#          --build-arg APP_VERSION=${DOCKER_TAG} \
#          --build-arg WAR_FILENAME=dependency-track-bundled.jar \
#          -t ${DOCKER_BUNDLED_REPO}:${DOCKER_TAG} \
#          --platform linux/amd64,linux/arm64 \
#          --push .
#
#    - name: Run Trivy vulnerability scanner
#      if: github.ref == 'refs/heads/master'
#      uses: aquasecurity/trivy-action@master
#      with:
#        image-ref: dependencytrack/apiserver:snapshot
#        format: 'sarif'
#        output: 'trivy-results.sarif'
#        ignore-unfixed: true
#        vuln-type: 'os'
#
#    - name: Upload Trivy scan results to GitHub Security tab
#      if: github.ref == 'refs/heads/master'
#      uses: github/codeql-action/upload-sarif@v1
#      with:
#        sarif_file: 'trivy-results.sarif'